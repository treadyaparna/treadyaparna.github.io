"use strict";(globalThis.webpackChunktreadyaparna_site=globalThis.webpackChunktreadyaparna_site||[]).push([[37],{1508:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/bb-speech-20cd2859666f9fbaec52867c2d1ca583.png"},7925:e=>{e.exports=JSON.parse('{"permalink":"/blog/step-into-step-functions","editUrl":"https://github.com/treadyaparna/treadyaparna.github.io/edit/main/blog/2025-01-20-steping-into-step-functions/index.mdx","source":"@site/blog/2025-01-20-steping-into-step-functions/index.mdx","title":"Step into Step Functions - From Glue Code to No Code","description":"Step Functions let you turn messy Lambda chains into visual workflows. With intrinsic functions, JSONata, and variables, you can accomplish advanced data transformations without writing glue code. Let\'s dive in.","date":"2025-01-20T00:00:00.000Z","tags":[{"inline":false,"label":"aws","permalink":"/blog/tags/aws","description":"AWS Cloud"},{"inline":false,"label":"step-functions","permalink":"/blog/tags/step-functions","description":"Step Function Workflows"},{"inline":true,"label":"serverless","permalink":"/blog/tags/serverless"},{"inline":true,"label":"orchestration","permalink":"/blog/tags/orchestration"},{"inline":true,"label":"jsonata","permalink":"/blog/tags/jsonata"},{"inline":true,"label":"no-code","permalink":"/blog/tags/no-code"}],"readingTime":5.68,"hasTruncateMarker":true,"authors":[{"name":"Aparna Saha","title":"Senior Software Engineer","url":"https://www.linkedin.com/in/aparnasaha/","page":{"permalink":"/blog/authors/aparna"},"socials":{"linkedin":"https://www.linkedin.com/in/aparnasaha/","github":"https://github.com/treadyaparna"},"imageURL":"https://github.com/treadyaparna.png","key":"aparna"}],"frontMatter":{"slug":"step-into-step-functions","title":"Step into Step Functions - From Glue Code to No Code","authors":["aparna"],"tags":["aws","step-functions","serverless","orchestration","jsonata","no-code"]},"unlisted":false,"prevItem":{"title":"Distributed Data Stream Aggregator with AWS Step Functions","permalink":"/blog/2025-10-10-distributed-data-stream-aggregator"}}')},9596:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var i=s(7925),t=s(4848),r=s(8453);const a={slug:"step-into-step-functions",title:"Step into Step Functions - From Glue Code to No Code",authors:["aparna"],tags:["aws","step-functions","serverless","orchestration","jsonata","no-code"]},o=void 0,l={authorsImageUrls:[void 0]},d=[{value:"Introduction",id:"introduction",level:2},{value:"What Are Step Functions?",id:"what-are-step-functions",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Types of Step Functions",id:"types-of-step-functions",level:2},{value:"Standard Workflows",id:"standard-workflows",level:3},{value:"Express Workflows",id:"express-workflows",level:3},{value:"Major Components",id:"major-components",level:2},{value:"Intrinsic Functions",id:"intrinsic-functions",level:2},{value:"JSONata &amp; Variables",id:"jsonata--variables",level:2},{value:"Towards No Code",id:"towards-no-code",level:2},{value:"Example Walkthrough",id:"example-walkthrough",level:2},{value:"1. Workflow Diagram",id:"1-workflow-diagram",level:3},{value:"2. Basic State Machine Definition",id:"2-basic-state-machine-definition",level:3},{value:"3. Add Intrinsic Functions",id:"3-add-intrinsic-functions",level:3},{value:"4. Introduce Variables",id:"4-introduce-variables",level:3},{value:"5. Use JSONata for Data Transformation",id:"5-use-jsonata-for-data-transformation",level:3},{value:"6. Direct Service Integrations",id:"6-direct-service-integrations",level:3},{value:"7. Express Workflow Variant",id:"7-express-workflow-variant",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={br:"br",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Step Functions let you turn messy Lambda chains into visual workflows. With intrinsic functions, JSONata, and variables, you can accomplish advanced data transformations without writing glue code. Let's dive in."}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"You're building an app. You've gone all-in on microservices, wiring everything with AWS Lambda. It feels modular and efficient. Each Lambda is doing its job beautifully."}),"\n",(0,t.jsx)(n.p,{children:"Life is good \u2014 until the app grows. Suddenly, functions need to talk to each other, pass data around, and behave like teammates in a relay race."}),"\n",(0,t.jsx)(n.p,{children:"Take a simple e-commerce workflow:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Validate the customer's order"}),"\n",(0,t.jsx)(n.li,{children:"Process the payment"}),"\n",(0,t.jsx)(n.li,{children:"Check inventory"}),"\n",(0,t.jsx)(n.li,{children:"Reserve the item"}),"\n",(0,t.jsx)(n.li,{children:"Send a confirmation email"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Five straightforward steps. But connecting them? That's where things get messy.",(0,t.jsx)(n.br,{}),"\n",'We end up writing endless "glue code," debugging integrations, and spending more time orchestrating than solving real business problems.']}),"\n",(0,t.jsxs)(n.p,{children:["This is where ",(0,t.jsx)(n.strong,{children:"AWS Step Functions"})," change the game."]}),"\n",(0,t.jsx)(n.p,{children:"Instead of writing orchestration code by hand, Step Functions let us visually design workflows. AWS handles retries, error handling, and state transitions behind the scenes."}),"\n",(0,t.jsx)(n.p,{children:"Why does this matter? Because with Step Functions we:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Save time by cutting out unnecessary code"}),"\n",(0,t.jsx)(n.li,{children:"Build reliable, maintainable workflows"}),"\n",(0,t.jsx)(n.li,{children:"Gain real-time visibility with a visual execution view"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Let's dive in."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Brown Bag Speech at Flaconi",src:s(1508).A+"",width:"1920",height:"1080"})}),"\n",(0,t.jsx)(n.h2,{id:"what-are-step-functions",children:"What Are Step Functions?"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"AWS Step Functions"})," is a fully managed ",(0,t.jsx)(n.strong,{children:"serverless orchestration service"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["It allows you to define workflows in the ",(0,t.jsx)(n.strong,{children:"Amazon States Language (ASL)"}),", a JSON-based DSL."]}),"\n",(0,t.jsx)(n.li,{children:"You can coordinate AWS services and external APIs into resilient workflows without writing boilerplate code."}),"\n",(0,t.jsxs)(n.li,{children:["It supports ",(0,t.jsx)(n.strong,{children:"microservice orchestration"}),", ",(0,t.jsx)(n.strong,{children:"batch processing"}),", and ",(0,t.jsx)(n.strong,{children:"event-driven applications"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Visual workflow design"})," with a drag-and-drop-like JSON definition"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Serverless and fully managed"})," \u2014 no servers to patch"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Retries, error handling, and input/output mapping"})," built in"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Native integrations"})," with Lambda, S3, DynamoDB, SNS, SQS, ECS, EventBridge, and even external APIs via HTTP"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Execution history and monitoring"})," through the AWS Console"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"High availability and reliability"})," out of the box"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"types-of-step-functions",children:"Types of Step Functions"}),"\n",(0,t.jsxs)(n.p,{children:["Step Functions offer ",(0,t.jsx)(n.strong,{children:"two workflow types"}),":"]}),"\n",(0,t.jsx)(n.h3,{id:"standard-workflows",children:"Standard Workflows"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Designed for ",(0,t.jsx)(n.strong,{children:"long-running"})," workflows (up to 1 year)."]}),"\n",(0,t.jsxs)(n.li,{children:["Provide ",(0,t.jsx)(n.strong,{children:"detailed execution history and auditing"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Ideal for complex business processes with retries and waiting."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"express-workflows",children:"Express Workflows"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Optimized for ",(0,t.jsx)(n.strong,{children:"high-volume, short-duration executions"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Cost-effective for event-driven architectures."}),"\n",(0,t.jsx)(n.li,{children:"Perfect for workloads like streaming data ingestion or lightweight API orchestration."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"major-components",children:"Major Components"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"State Machine"}),": The workflow definition itself."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"States"}),": Individual steps (e.g., ",(0,t.jsx)(n.code,{children:"Task"}),", ",(0,t.jsx)(n.code,{children:"Choice"}),", ",(0,t.jsx)(n.code,{children:"Pass"}),", ",(0,t.jsx)(n.code,{children:"Wait"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Transitions"}),": Define flow between states."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input & Output"}),": JSON passed between states."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Activities"}),": Long-running external tasks."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error Handling & Retries"}),": Built-in resiliency."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"IAM Roles"}),": Permissions to access AWS resources."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Execution"}),": A running instance of the workflow."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitoring"}),": CloudWatch integration for logs and metrics."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Service Integrations"}),": Direct calls to other AWS services."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"intrinsic-functions",children:"Intrinsic Functions"}),"\n",(0,t.jsxs)(n.p,{children:["Before ",(0,t.jsx)(n.strong,{children:"intrinsic functions"}),", we often created Lambda functions just for trivial operations like string concatenation or math. High maintenance for low-value work."]}),"\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.strong,{children:"2022"}),", AWS introduced ",(0,t.jsx)(n.strong,{children:"intrinsic functions"}),", enabling lightweight data manipulation directly inside Step Functions."]}),"\n",(0,t.jsx)(n.p,{children:"Examples:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"States.Format"})," \u2192 string formatting"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"States.MathAdd"})," \u2192 math operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"States.ArrayLength"})," \u2192 array manipulation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"States.Timestamp"})," \u2192 date/time handling"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:['This shift reduced the need for "helper Lambdas" and pushed Step Functions toward ',(0,t.jsx)(n.strong,{children:"no code"})," orchestration."]}),"\n",(0,t.jsx)(n.h2,{id:"jsonata--variables",children:"JSONata & Variables"}),"\n",(0,t.jsxs)(n.p,{children:["By ",(0,t.jsx)(n.strong,{children:"2024"}),", Step Functions became even more powerful with ",(0,t.jsx)(n.strong,{children:"JSONata expressions"})," and ",(0,t.jsx)(n.strong,{children:"variables"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Variables"}),": Assign values in one state and reuse them later without passing bulky payloads."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"JSONata"}),": A declarative query and transformation language for JSON. It allows filtering, mapping, and reshaping data inline."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Together, they unlock advanced data manipulation ",(0,t.jsx)(n.strong,{children:"without Lambda"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Example JSONata usage:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "items": [\n    { "price": 10 },\n    { "price": 20 }\n  ],\n  "total": "$sum(items.price)"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Result \u2192 ",(0,t.jsx)(n.code,{children:"total = 30"})]}),"\n",(0,t.jsx)(n.h2,{id:"towards-no-code",children:"Towards No Code"}),"\n",(0,t.jsxs)(n.p,{children:["With ",(0,t.jsx)(n.strong,{children:"intrinsic functions"}),", ",(0,t.jsx)(n.strong,{children:"JSONata"}),", and ",(0,t.jsx)(n.strong,{children:"variables"}),", Step Functions can:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Process data dynamically"}),"\n",(0,t.jsx)(n.li,{children:"Run parallel loops with concurrency control"}),"\n",(0,t.jsx)(n.li,{children:"Handle retries and errors natively"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Meaning: you can orchestrate entire ",(0,t.jsx)(n.strong,{children:"ETL pipelines"})," or ",(0,t.jsx)(n.strong,{children:"API workflows"})," with no Lambda glue code."]}),"\n",(0,t.jsxs)(n.p,{children:["This is the realm of ",(0,t.jsx)(n.strong,{children:"No Code orchestration"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"example-walkthrough",children:"Example Walkthrough"}),"\n",(0,t.jsxs)(n.p,{children:["Let\u2019s put theory into practice and design a ",(0,t.jsx)(n.strong,{children:"simple order processing workflow"})," \u2014 end-to-end \u2014 using ",(0,t.jsx)(n.strong,{children:"Step Functions"}),", ",(0,t.jsx)(n.strong,{children:"intrinsic functions"}),", and ",(0,t.jsx)(n.strong,{children:"JSONata"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The flow:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Validate input"}),"\n",(0,t.jsx)(n.li,{children:"Process payment"}),"\n",(0,t.jsx)(n.li,{children:"Check inventory"}),"\n",(0,t.jsx)(n.li,{children:"Send confirmation"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"We\u2019ll see how each piece fits together \u2014 without writing a single line of glue code."}),"\n",(0,t.jsx)(n.h3,{id:"1-workflow-diagram",children:"1. Workflow Diagram"}),"\n",(0,t.jsx)(n.mermaid,{value:"stateDiagram-v2\n    [*] --\x3e ValidateOrder\n    ValidateOrder --\x3e ProcessPayment\n    ProcessPayment --\x3e CheckInventory\n    ValidateOrder --\x3e SendConfirmation\n    ProcessPayment --\x3e SendConfirmation\n    CheckInventory --\x3e SendConfirmation\n    SendConfirmation --\x3e Success\n    Success --\x3e [*]"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," ",(0,t.jsx)(n.code,{children:"Standard"})," workflow \u2014 because it runs across multiple systems and may take a few minutes to complete."]}),"\n",(0,t.jsx)(n.h3,{id:"2-basic-state-machine-definition",children:"2. Basic State Machine Definition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "Comment": "Order processing workflow",\n  "StartAt": "ValidateOrder",\n  "States": {\n    "ValidateOrder": {\n      "Type": "Task",\n      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:ValidateOrder",\n      "Next": "ProcessPayment"\n    },\n    "ProcessPayment": {\n      "Type": "Task",\n      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:ProcessPayment",\n      "Next": "CheckInventory"\n    },\n    "CheckInventory": {\n      "Type": "Task",\n      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:CheckInventory",\n      "Next": "SendConfirmation"\n    },\n    "SendConfirmation": {\n      "Type": "Task",\n      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:SendEmail",\n      "End": true\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"A simple linear sequence where each step calls a Lambda. No retry logic yet \u2014 just orchestration."}),"\n",(0,t.jsx)(n.h3,{id:"3-add-intrinsic-functions",children:"3. Add Intrinsic Functions"}),"\n",(0,t.jsxs)(n.p,{children:["Instead of adding a Lambda just to compute totals or format strings, use ",(0,t.jsx)(n.strong,{children:"intrinsic functions"})," like ",(0,t.jsx)(n.code,{children:"States.MathAdd"})," and ",(0,t.jsx)(n.code,{children:"States.Format"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "CalculateTotal": {\n    "Type": "Pass",\n    "Parameters": {\n      "subtotal.$": "$.order.subtotal",\n      "taxRate": 0.08,\n      "total.$": "States.MathAdd($.order.subtotal, States.MathAdd($.order.subtotal * 0.08, 0))"\n    },\n    "Next": "ProcessPayment"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"We compute the total inside Step Functions \u2014 no helper Lambda required."}),"\n",(0,t.jsx)(n.h3,{id:"4-introduce-variables",children:"4. Introduce Variables"}),"\n",(0,t.jsx)(n.p,{children:"Variables store intermediate results for reuse across states."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "ValidateOrder": {\n    "Type": "Task",\n    "Resource": "arn:aws:lambda:us-east-1:123456789012:function:ValidateOrder",\n    "ResultPath": "$.validation",\n    "Next": "SaveVariables"\n  },\n  "SaveVariables": {\n    "Type": "Pass",\n    "Parameters": {\n      "orderId.$": "$.validation.orderId",\n      "customerEmail.$": "$.validation.customer.email"\n    },\n    "Next": "ProcessPayment"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["We extract ",(0,t.jsx)(n.code,{children:"orderId"})," and ",(0,t.jsx)(n.code,{children:"customerEmail"})," once and reuse them later \u2014 without carrying a massive payload between states."]}),"\n",(0,t.jsx)(n.h3,{id:"5-use-jsonata-for-data-transformation",children:"5. Use JSONata for Data Transformation"}),"\n",(0,t.jsx)(n.p,{children:"JSONata expressions let you reshape or compute data inline."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "TransformOrder": {\n    "Type": "Pass",\n    "Parameters": {\n      "summary": {\n        "orderId.$": "$.order.id",\n        "total.$": "$sum($.order.items.price)",\n        "itemNames.$": "$join($.order.items.name, \', \')"\n      }\n    },\n    "Next": "SendConfirmation"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Here, JSONata computes the order total and merges item names into a single string."}),"\n",(0,t.jsx)(n.h3,{id:"6-direct-service-integrations",children:"6. Direct Service Integrations"}),"\n",(0,t.jsxs)(n.p,{children:["Step Functions can call AWS services ",(0,t.jsx)(n.strong,{children:"directly"})," \u2014 no Lambda needed."]}),"\n",(0,t.jsxs)(n.p,{children:["Example: send an email via ",(0,t.jsx)(n.strong,{children:"Amazon SES"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "SendConfirmation": {\n    "Type": "Task",\n    "Resource": "arn:aws:states:::aws-sdk:ses:sendEmail",\n    "Parameters": {\n      "Destination": {\n        "ToAddresses.$": "[$.customerEmail]"\n      },\n      "Message": {\n        "Body": {\n          "Text": {\n            "Data.$": "States.Format(\'Order {} confirmed! Total: ${}\', $.orderId, $.total)"\n          }\n        },\n        "Subject": { "Data": "Order Confirmation" }\n      },\n      "Source": "orders@myshop.com"\n    },\n    "End": true\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"No Lambda required \u2014 Step Functions calls SES directly and uses intrinsic functions for dynamic message text."}),"\n",(0,t.jsx)(n.h3,{id:"7-express-workflow-variant",children:"7. Express Workflow Variant"}),"\n",(0,t.jsxs)(n.p,{children:["For ",(0,t.jsx)(n.strong,{children:"high-volume, short-lived"})," jobs (like logging or webhook processing), just change the workflow type to ",(0,t.jsx)(n.strong,{children:"Express"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "StateMachineType": "EXPRESS"\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Express workflows trade detailed logs for scale and lower cost \u2014 ideal for event-driven systems."}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsxs)(n.p,{children:["Yes, you ",(0,t.jsx)(n.em,{children:"could"})," orchestrate microservices by hand, wiring up Lambdas, writing glue code, and hoping it scales. Or you could use Step Functions."]}),"\n",(0,t.jsx)(n.p,{children:"Step Functions give you:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Cleaner workflows"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Less code to maintain"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Reliability and visibility"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Intrinsic functions and JSONata"})," to replace trivial Lambdas"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The takeaway: Step Functions let us focus on ",(0,t.jsx)(n.strong,{children:"business logic"}),", not orchestration code."]}),"\n",(0,t.jsxs)(n.p,{children:["Happy building \u2014 and happy coding with ",(0,t.jsx)(n.strong,{children:"no code"}),". \ud83c\udf89"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);